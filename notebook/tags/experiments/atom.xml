<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Browse by Tag: Experiments | Aaron Gustafson]]></title>
  <link href="https://www.aaron-gustafson.com/notebook/tags/experiments/atom.xml" rel="self"/>
  <link href="https://www.aaron-gustafson.com/"/>
  <updated>2016-08-19T13:32:50-04:00</updated>
  <id>https://www.aaron-gustafson.com/</id>
  <author>
    <name><![CDATA[Aaron Gustafson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Speeding Things Up With Service Worker, Resource Hints, and More]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/speeding-things-up-with-service-worker-resource-hints-and-more/"/>
    <updated>2015-11-20T16:39:09-05:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/speeding-things-up-with-service-worker-resource-hints-and-more</id>
    <content type="html"><![CDATA[<p>User experience encompasses more than just the interface. Download speed, render performance, and the cost of accessing a site are often overlooked areas when it comes to the practice of UX, but they all affect how users experience what we build on the Web.</p>

<!-- more -->

<p>I’m always looking for ways to improve these aspects of my own site. And, since it’s my own personal playground, I often use it as a test-bed for new technologies, ideas, and techniques. My latest adventure was inspired by a bunch of <a href="https://www.aaron-gustafson.com/notebook/links/">articles and posts I’ve linked to recently</a>, especially</p>

<ul>
  <li><a href="https://adactio.com/journal/9775">Jeremy Keith’s “My First Service Worker”</a>,</li>
  <li><a href="https://css-tricks.com/serviceworker-for-offline/">Nicolas Bevacqua’s “Making a Simple Site Work Offline with ServiceWorker”</a>,</li>
  <li><a href="http://deanhume.com/Home/BlogPost/service-workers--dynamic-responsive-images-using-webp-images/10132/">Dean Hume’s “Service Workers: Dynamic Responsive Images Using Webp Images”</a>, and</li>
  <li><a href="https://medium.com/@cramforce/not-so-micro-optimizations-f867c47b832d#.satdv0fap">Malte Ubl’s “Not so micro optimizations”</a></li>
</ul>

<p>After reading these pieces, I decided to see how much I could do to improve the performance of this site, especially on posts with a lot of images and embedded code samples, like <a href="https://www.aaron-gustafson.com/notebook/labeled-with-love/">my recent post on form labels</a>.</p>

<h2 id="using-resource-hints">Using Resource Hints</h2>

<p>To kick things off, I followed Malte’s advice and used <a href="https://w3c.github.io/resource-hints/">Resource Hints</a> to <em>prime the pump</em> for any third-party servers hosting assets I use frequently (e.g. Disqus, Twitter, etc.). I used the code Malte references in <a href="https://github.com/ampproject/amphtml">the AMP Project</a> as my starting point and <a href="https://github.com/aarongustafson/aarongustafson.github.io/blob/source/source/_javascript/main/resource-hints.js">added two new methods (<code>preconnect()</code> and <code>prefetch()</code>) to my global <code>AG</code> object</a>. With that library code in place, I can call those methods as necessary from within my other JavaScript files. Here’s a simplified extract from <a href="https://github.com/aarongustafson/aarongustafson.github.io/blob/source/source/_javascript/post/disqus.js">my Disqus integration script</a>:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist28197221" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-resource-hints-sample-js" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-resource-hints-sample-js-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-resource-hints-sample-js-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> ( <span class="pl-s"><span class="pl-pds">&#39;</span>AG<span class="pl-pds">&#39;</span></span> <span class="pl-k">in</span> <span class="pl-c1">window</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-s"><span class="pl-pds">&#39;</span>preconnect<span class="pl-pds">&#39;</span></span> <span class="pl-k">in</span> <span class="pl-c1">window</span>.<span class="pl-c1">AG</span> ) {</td>
      </tr>
      <tr>
        <td id="file-resource-hints-sample-js-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-resource-hints-sample-js-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">window</span>.<span class="pl-c1">AG</span>.<span class="pl-en">preconnect</span>( <span class="pl-s"><span class="pl-pds">&#39;</span>//disqus.com/<span class="pl-pds">&#39;</span></span> );</td>
      </tr>
      <tr>
        <td id="file-resource-hints-sample-js-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-resource-hints-sample-js-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">window</span>.<span class="pl-c1">AG</span>.<span class="pl-en">prefetch</span>( <span class="pl-s"><span class="pl-pds">&#39;</span>//<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> disqus_shortname <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.disqus.com/count.js<span class="pl-pds">&#39;</span></span> );</td>
      </tr>
      <tr>
        <td id="file-resource-hints-sample-js-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-resource-hints-sample-js-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea/raw/b6ca32d30643137603def7b4805d7bdcbfe63137/resource-hints-sample.js" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea#file-resource-hints-sample-js">resource-hints-sample.js</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>While a minor addition, the speed improvement in <a href="http://caniuse.com/#search=resource%20hints">supporting browsers</a> was noticeable.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></p>

<h2 id="integrating-service-worker">Integrating Service Worker</h2>

<p>With that in the bag, I set about making my first <a href="http://www.w3.org/TR/service-workers/">Service Worker</a>. I started off gently, using Dean’s piece as a guide. I added a WebP conversion bit to <a href="https://github.com/aarongustafson/aarongustafson.github.io/blob/source/tasks/gulp/images.js">my image processing Gulp task</a> to get the files in place and then I created the Service Worker. By default, <a href="https://gist.github.com/deanhume/c04478df744ce833925c#file-client-hints-service-worker-js">Dean’s code</a> converts <em>all</em> JPG and PNG requests to WebP responses, so I set it up to limit the requests to only those files being requested directly from my server. I have no way of knowing if WebP equivalents of every JPG and PNG exist on the open web (probably not), but I know they exist on my server. Here’s the updated code:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist28206589" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-webp-service-worker-js" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-webp-service-worker-js-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-webp-service-worker-js-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-webp-service-worker-js-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-webp-service-worker-js-LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">self</span>.<span class="pl-en">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fetch<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-c1">event</span>) {</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-webp-service-worker-js-LC4" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-webp-service-worker-js-LC5" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> request <span class="pl-k">=</span> <span class="pl-c1">event</span>.<span class="pl-smi">request</span>,</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-webp-service-worker-js-LC6" class="blob-code blob-code-inner js-file-line">        url <span class="pl-k">=</span> <span class="pl-smi">request</span>.<span class="pl-smi">url</span>,</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-webp-service-worker-js-LC7" class="blob-code blob-code-inner js-file-line">        url_object <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">URL</span>( url ),</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-webp-service-worker-js-LC8" class="blob-code blob-code-inner js-file-line">        re_jpg_or_png <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-cce">\\.</span>(?:jpg<span class="pl-k">|</span>png)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-webp-service-worker-js-LC9" class="blob-code blob-code-inner js-file-line">        supports_webp <span class="pl-k">=</span> <span class="pl-c1">false</span>, <span class="pl-c">// pessimism</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-webp-service-worker-js-LC10" class="blob-code blob-code-inner js-file-line">        webp_url;</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-webp-service-worker-js-LC11" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-webp-service-worker-js-LC12" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// Check if the image is a local jpg or png</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-webp-service-worker-js-LC13" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( <span class="pl-smi">re_jpg_or_png</span>.<span class="pl-c1">test</span>( <span class="pl-smi">request</span>.<span class="pl-smi">url</span> ) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-webp-service-worker-js-LC14" class="blob-code blob-code-inner js-file-line">         <span class="pl-smi">url_object</span>.<span class="pl-smi">origin</span> <span class="pl-k">==</span> <span class="pl-smi">location</span>.<span class="pl-smi">origin</span> ) {</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-webp-service-worker-js-LC15" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-webp-service-worker-js-LC16" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// console.log(&#39;WORKER: caught a request for a local PNG or JPG&#39;);</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-webp-service-worker-js-LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-webp-service-worker-js-LC18" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// Inspect the accept header for WebP support</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-webp-service-worker-js-LC19" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( <span class="pl-smi">request</span>.<span class="pl-c1">headers</span>.<span class="pl-en">has</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>accept<span class="pl-pds">&#39;</span></span>) )</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-webp-service-worker-js-LC20" class="blob-code blob-code-inner js-file-line">        {</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-webp-service-worker-js-LC21" class="blob-code blob-code-inner js-file-line">            supports_webp <span class="pl-k">=</span> <span class="pl-smi">request</span>.<span class="pl-c1">headers</span>.<span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>accept<span class="pl-pds">&#39;</span></span>).<span class="pl-en">includes</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>webp<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-webp-service-worker-js-LC22" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-webp-service-worker-js-LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-webp-service-worker-js-LC24" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// Browser supports WebP</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-webp-service-worker-js-LC25" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( supports_webp )</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-webp-service-worker-js-LC26" class="blob-code blob-code-inner js-file-line">        {</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-webp-service-worker-js-LC27" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// Make the new URL</span></td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-webp-service-worker-js-LC28" class="blob-code blob-code-inner js-file-line">            webp_url <span class="pl-k">=</span> <span class="pl-smi">url</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, <span class="pl-smi">url</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>)) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.webp<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-webp-service-worker-js-LC29" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-webp-service-worker-js-LC30" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span>.<span class="pl-en">respondWith</span>(</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-webp-service-worker-js-LC31" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">fetch</span>(</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-webp-service-worker-js-LC32" class="blob-code blob-code-inner js-file-line">                    webp_url,</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-webp-service-worker-js-LC33" class="blob-code blob-code-inner js-file-line">                    { mode<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>no-cors<span class="pl-pds">&#39;</span></span> }</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-webp-service-worker-js-LC34" class="blob-code blob-code-inner js-file-line">                )</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-webp-service-worker-js-LC35" class="blob-code blob-code-inner js-file-line">            );</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-webp-service-worker-js-LC36" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-webp-service-worker-js-LC37" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-webp-service-worker-js-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-webp-service-worker-js-LC38" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/ff6aef09a10038e1728a/raw/078af4350bca2900c2d4dc10b3827948bc401c9b/webp-service-worker.js" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/ff6aef09a10038e1728a#file-webp-service-worker-js">webp-service-worker.js</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>When I began tucking to the caching possibilities of Service Workers, following Nicolas’ and Jeremy’s posts, I <a href="https://github.com/aarongustafson/aarongustafson.github.io/blob/source/source/_javascript/serviceworker/fetch-cached.js">opted to tweak Nicholas’ caching setup a bit</a>. I’m still not completely thrilled with it, but it’s a work in progress. I’m sure I will tweak as I get more familiar with the technology.</p>

<p>To keep my Service Worker code modularized (like my other JavaScript code), I opted to <a href="https://github.com/aarongustafson/aarongustafson.github.io/tree/source/source/_javascript/serviceworker">break it up into separate files</a> and am using Gulp to merge them all together and move the combined file into the root of the site. If you’d like to follow a similar path, feel free to adapt this Gulp task (which builds all of my JavaScript):</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist28197221" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-gulp-scripts-js" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-gulp-scripts-js-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-gulp-scripts-js-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> gulp <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-gulp-scripts-js-LC2" class="blob-code blob-code-inner js-file-line">    path <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>path<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-gulp-scripts-js-LC3" class="blob-code blob-code-inner js-file-line">    folder <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-folders<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-gulp-scripts-js-LC4" class="blob-code blob-code-inner js-file-line">    gulpIf <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-if<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-gulp-scripts-js-LC5" class="blob-code blob-code-inner js-file-line">    insert <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-insert<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-gulp-scripts-js-LC6" class="blob-code blob-code-inner js-file-line">    concat <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-concat<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-gulp-scripts-js-LC7" class="blob-code blob-code-inner js-file-line">    uglify <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-uglify<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-gulp-scripts-js-LC8" class="blob-code blob-code-inner js-file-line">    notify <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-notify<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-gulp-scripts-js-LC9" class="blob-code blob-code-inner js-file-line">    rename <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>gulp-rename<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-gulp-scripts-js-LC10" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//handleErrors = require(&#39;handleErrors&#39;),</span></td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-gulp-scripts-js-LC11" class="blob-code blob-code-inner js-file-line">    source_folder <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>source/_javascript<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-gulp-scripts-js-LC12" class="blob-code blob-code-inner js-file-line">    destination_root <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>source<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-gulp-scripts-js-LC13" class="blob-code blob-code-inner js-file-line">    destination_folder <span class="pl-k">=</span> destination_root <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/j<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-gulp-scripts-js-LC14" class="blob-code blob-code-inner js-file-line">    public_root <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>public<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-gulp-scripts-js-LC15" class="blob-code blob-code-inner js-file-line">    public_folder <span class="pl-k">=</span> public_root <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/j<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-gulp-scripts-js-LC16" class="blob-code blob-code-inner js-file-line">    rename_serviceworker <span class="pl-k">=</span> <span class="pl-en">rename</span>({</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-gulp-scripts-js-LC17" class="blob-code blob-code-inner js-file-line">        dirname<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>../<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-gulp-scripts-js-LC18" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-gulp-scripts-js-LC19" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-gulp-scripts-js-LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">gulp</span>.<span class="pl-en">task</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>scripts<span class="pl-pds">&#39;</span></span>, <span class="pl-en">folder</span>(source_folder, <span class="pl-k">function</span>(<span class="pl-smi">folder</span>){</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-gulp-scripts-js-LC21" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">gulp</span>.<span class="pl-en">src</span>(<span class="pl-smi">path</span>.<span class="pl-c1">join</span>(source_folder, folder, <span class="pl-s"><span class="pl-pds">&#39;</span>*.js<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-gulp-scripts-js-LC22" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-en">concat</span>(folder <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.js<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-gulp-scripts-js-LC23" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-smi">insert</span>.<span class="pl-en">transform</span>(<span class="pl-k">function</span>(<span class="pl-smi">contents</span>, <span class="pl-smi">file</span>){</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-gulp-scripts-js-LC24" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// insert a build time variable</span></td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-gulp-scripts-js-LC25" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> build_time <span class="pl-k">=</span> (<span class="pl-k">new</span> <span class="pl-en">Date</span>()).<span class="pl-c1">getTime</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-gulp-scripts-js-LC26" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">contents</span>.<span class="pl-c1">replace</span>( <span class="pl-s"><span class="pl-pds">&#39;</span>{{BUILD_TIME}}<span class="pl-pds">&#39;</span></span>, build_time );</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-gulp-scripts-js-LC27" class="blob-code blob-code-inner js-file-line">         }))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-gulp-scripts-js-LC28" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-smi">gulp</span>.<span class="pl-en">dest</span>(destination_folder))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-gulp-scripts-js-LC29" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-smi">gulp</span>.<span class="pl-en">dest</span>(public_folder))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-gulp-scripts-js-LC30" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-en">rename</span>({suffix<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.min<span class="pl-pds">&#39;</span></span>}))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-gulp-scripts-js-LC31" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-en">uglify</span>())</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-gulp-scripts-js-LC32" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-en">gulpIf</span>(folder<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&#39;</span>serviceworker<span class="pl-pds">&#39;</span></span>,rename_serviceworker))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-gulp-scripts-js-LC33" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-smi">gulp</span>.<span class="pl-en">dest</span>(destination_folder))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-gulp-scripts-js-LC34" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-smi">gulp</span>.<span class="pl-en">dest</span>(public_folder))</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-gulp-scripts-js-LC35" class="blob-code blob-code-inner js-file-line">        .<span class="pl-en">pipe</span>(<span class="pl-en">notify</span>({ message<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Scripts task complete<span class="pl-pds">&#39;</span></span> }));</td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-gulp-scripts-js-LC36" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">//.on(&#39;error&#39;, handleErrors);</span></td>
      </tr>
      <tr>
        <td id="file-gulp-scripts-js-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-gulp-scripts-js-LC37" class="blob-code blob-code-inner js-file-line">}));</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea/raw/b6ca32d30643137603def7b4805d7bdcbfe63137/gulp-scripts.js" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea#file-gulp-scripts-js">gulp-scripts.js</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>As most of the walkthroughs recommended that you version your Service Worker if you’re doing any caching, I set mine up to be auto-versioned by inserting a timestamp (lines 23-27, above) into my Service Worker header file (line 3, below):</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist28197221" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-_header-js" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-_header-js-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-_header-js-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&#39;</span>use strict<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-_header-js-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-_header-js-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-_header-js-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-_header-js-LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> version <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>v{{BUILD_TIME}}:<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-_header-js-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-_header-js-LC4" class="blob-code blob-code-inner js-file-line">    default_avatar <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&amp;f=y<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-_header-js-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-_header-js-LC5" class="blob-code blob-code-inner js-file-line">    missing_image <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>https://i.imgur.com/oWLuFAa.gif<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea/raw/b6ca32d30643137603def7b4805d7bdcbfe63137/_header.js" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/7f05709cca9293e4efea#file-_header-js">_header.js</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>Service Workers are still pretty new (and <a href="http://caniuse.com/#feat=serviceworkers">modestly supported</a>), but it’s definitely interesting to see what’s possible using them. <a href="https://adactio.com/journal/9844">Like Jeremy</a>, I want to do a bit more exploration into caching and how it may actually <em>increase</em> the monetary cost of accessing a website if not used properly. Like any powerful tool, we need to wield it wisely.</p>

<figure><img src="https://media.giphy.com/media/dlmcYrvalMmAw/giphy.gif" alt="Animated GIF of a guy accidentally launching a board into his helper while power sanding." /></figure>

<h2 id="making-gists-static">Making Gists Static</h2>

<p>On particularly code-heavy posts (yes, like this one), I make liberal use of Gists. They’re quite useful, but <a href="https://gist.github.com/BinaryMuse/803483">the Gist plugin for Jekyll</a>, while good, still requests a script from Github in order to load the pretty printed version of the Gist. On some posts, that can mean 5 or more additional network requests, not to mention execution time for the JavaScript. It’s yet another dependency that could prohibit you from quickly getting to the content you’re looking for. Additionally, <a href="https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/">if JavaScript should be available, but isn’t</a>, you get nothing (since the <code>noscript</code> content is only evaluated if JavaScript support isn’t available or if a user turns it off).</p>

<p>With all of this in mind, I decided to revise the plugin and make it capable of downloading the JavaScript code directly. It then extracts the HTML markup that the JavaScript would be writing into the page and just embeds it directly. It also caches the result, which is handy for speeding up the build process.</p>

<p>You can grab <a href="https://gist.github.com/aarongustafson/b98add8f3580f6707cf5">my fork of the Gist Jekyll Plugin as, well, a Gist</a>. It’s also <a href="https://github.com/aarongustafson/aarongustafson.github.io/blob/source/plugins/gist_tag.rb">in the source of this site on Github</a>.</p>

<h2 id="hopefully-a-little-faster">(Hopefully) A Little Faster</h2>

<p>All told, these changes have gotten the render time of this site down significantly across the board.<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup> Even more so on browsers that support Service Workers and Resource Hints. I’ll likely continue tweaking as I go, but I wanted to share my process, code, and thoughts in case any of it might be useful to you in your own work. In the end, it’s all about creating better experiences for our users. How our sites perform is a big part of that.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Sadly I forgot to run some speed tests prior to rolling out this change and I didn’t feel like rolling back the site, so I don’t have solid numbers for you. That said, it seemed to shave nearly 2 seconds off of the load time on heavy pages like the post I mentioned. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>Again, I don’t have the numbers, but I am routinely seeing <code>DOMContentLoaded</code> reached between 400-600ms with Service Worker caching in play. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Flexbox and Quantity Queries]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/playing-with-flexbox-and-quantity-queries/"/>
    <updated>2015-03-26T14:44:24-04:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/playing-with-flexbox-and-quantity-queries</id>
    <content type="html"><![CDATA[<p>Ever since reading <a href="http://twitter.com/heydonworks">Haydon Pickering</a>’s <a href="http://alistapart.com/article/quantity-queries-for-css">piece on quantity queries</a>, I’ve been musing over the possibilities for layout. I decided I to play around with them a bit on this site as it’s been a while since I’ve tweaked the design. Being that I wanted to experiment, I thought this would be a fun time to tuck into <a href="http://www.w3.org/TR/css-flexbox-1/">Flexbox</a> a bit more as well.</p>

<!-- more -->

<p>Here’s a brief overview of the project:</p>

<p><strong>The Candidate</strong>: My <a href="/speaking-engagements/">speaking engagements</a> page.<br />
<strong>The Challenge</strong>: The “Future” list will grow and shrink as I book things, so I never know how many will be there. The “Past” list will also grow, but I am less interested in getting crazy with that.<br />
<strong>The Idea</strong>: A grid layout that flexes to visually highlight 1-2 upcoming future events and allows the others to flow in at the default grid size. It should be set up to handle everything from a single future event to a dozen or more.</p>

<figure id="2015-03-26-1" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""><figcaption>My sketch of the idea.</figcaption></figure>

<p>The markup pattern was pretty simple. It’s just a list of events:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-markup-html" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-html">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-markup-html-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-markup-html-LC1" class="blob-code blob-code-inner js-file-line">&lt;<span class="pl-ent">ul</span> <span class="pl-e">class</span>=<span class="pl-s"><span class="pl-pds">&quot;</span>listing listing--events<span class="pl-pds">&quot;</span></span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-markup-html-LC2" class="blob-code blob-code-inner js-file-line">  &lt;<span class="pl-ent">li</span> <span class="pl-e">class</span>=<span class="pl-s"><span class="pl-pds">&quot;</span>listing__item listing__item--1 event event--future<span class="pl-pds">&quot;</span></span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-markup-html-LC3" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">&lt;!-- content --&gt;</span></td>
      </tr>
      <tr>
        <td id="file-markup-html-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-markup-html-LC4" class="blob-code blob-code-inner js-file-line">  &lt;/<span class="pl-ent">li</span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-markup-html-LC5" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">&lt;!-- lis continue --&gt;</span></td>
      </tr>
      <tr>
        <td id="file-markup-html-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-markup-html-LC6" class="blob-code blob-code-inner js-file-line">&lt;/<span class="pl-ent">ul</span>&gt;</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/markup.html" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-markup-html">markup.html</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>With that in place, I got to work.</p>

<h2 id="single-file">Single File</h2>

<p>To set the stage, I started with some basic Flexbox syntax<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup> by handling the container and the basic full-width small screen view:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-first-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-first-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-first-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-first-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-first-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-first-pass-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-first-pass-css-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-first-pass-css-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-first-pass-css-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-first-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px padding */</span></td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-first-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px bottom margin */</span></td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-first-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-first-pass-css-LC11" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/first-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-first-pass-css">first-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>You may be wondering where all of the experimental style rules are. I use <a href="https://github.com/postcss/autoprefixer">Autoprefixer</a> to handle the experimental property inclusion/trans-compilation so I can keep my CSS clean and standards-based.</p>

<p>This simple CSS gives you exactly what you’d expect: a vertical list of events, separated by 20px worth of space.</p>

<figure id="2015-03-26-2" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="two-by-two">Two by Two</h2>

<p>Next up, I tackled the first breakpoint at 28.75em:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-second-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-second-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-second-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-second-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-second-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-second-pass-css-LC4" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">align</span>-items</span>: stretch;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-second-pass-css-LC5" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-second-pass-css-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-second-pass-css-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-second-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-second-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-second-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px v */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-second-pass-css-LC11" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-second-pass-css-LC12" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-second-pass-css-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-second-pass-css-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">28.75<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-second-pass-css-LC15" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-second-pass-css-LC16" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 20px gap divided by 2 events per row */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-second-pass-css-LC17" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-second-pass-css-LC18" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-second-pass-css-LC19" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px &lt; */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-second-pass-css-LC20" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-second-pass-css-LC21" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-second-pass-css-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Remove left margin for row starters */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-second-pass-css-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-second-pass-css-LC24" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-second-pass-css-LC25" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-second-pass-css-LC26" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-second-pass-css-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins on &quot;future&quot; events</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-second-pass-css-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &amp; remove the correct one */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-second-pass-css-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-second-pass-css-LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-second-pass-css-LC31" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-second-pass-css-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-second-pass-css-LC33" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-second-pass-css-LC34" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-second-pass-css-LC35" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-second-pass-css-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 1,</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-second-pass-css-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first span both columns  */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-second-pass-css-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+1</span>)<span class="pl-e">:first-child</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-second-pass-css-LC39" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-second-pass-css-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-second-pass-css-LC41" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-second-pass-css-LC42" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-second-pass-css-LC43" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-second-pass-css-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/second-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-second-pass-css">second-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>In this pass, I set up the event blocks to fill 50% of the parent container (well, 50% minus the 1.25rem gutter between them, using <a href="http://www.w3.org/TR/css3-values/#calc"><code>calc()</code></a>).<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup> In order to make the children wrap to form rows, I set <code>flex-wrap: wrap</code> on the list (<code>.listing--events</code>). Then, to make the children all equal heights across each row, I set <code>align-items: stretch</code>. The gutter space was achieved via left margins on all events save the row starters (<code>.event:nth-child(odd)</code>).</p>

<p>It’s worth noting that in the full page I have two sets of event listings: one past and one future. The “event” <code>class</code> is used in all instances. The modified “future” <code>class</code> is added to events that have not happened yet.</p>

<p>Then I used a quantity query to select the first future event when there is more than one in the list (line 38) and set it span 100% of the parent width. To keep the gutters accurate, I also swapped where the margins were applied, adding the margin back to <code>.event--future:nth-child(odd)</code> and removing it from <code>.event--future:nth-child(even)</code>.</p>

<figure id="2015-03-26-3" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="threes-a-crowd">Three’s a Crowd</h2>

<p>Finally, I could tackle the third and most complicated layout. Things seemed to get a little wide around 690px, so I set the breakpoint to 43.125em.</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-third-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-third-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-third-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-third-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-third-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-third-pass-css-LC4" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">align</span>-items</span>: stretch;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-third-pass-css-LC5" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-third-pass-css-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-third-pass-css-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-third-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-third-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-third-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px v */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-third-pass-css-LC11" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-third-pass-css-LC12" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-third-pass-css-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-third-pass-css-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">28.75<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-third-pass-css-LC15" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-third-pass-css-LC16" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 20px gap divided by 2 events per row */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-third-pass-css-LC17" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-third-pass-css-LC18" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-third-pass-css-LC19" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px &lt; */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-third-pass-css-LC20" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-third-pass-css-LC21" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-third-pass-css-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Remove left margin for row starters */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-third-pass-css-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-third-pass-css-LC24" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-third-pass-css-LC25" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-third-pass-css-LC26" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-third-pass-css-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins on &quot;future&quot; events</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-third-pass-css-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &amp; remove the correct one */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-third-pass-css-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-third-pass-css-LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-third-pass-css-LC31" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-third-pass-css-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-third-pass-css-LC33" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-third-pass-css-LC34" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-third-pass-css-LC35" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-third-pass-css-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 1,</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-third-pass-css-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first span both columns  */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-third-pass-css-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+1</span>)<span class="pl-e">:first-child</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-third-pass-css-LC39" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-third-pass-css-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-third-pass-css-LC41" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-third-pass-css-LC42" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-third-pass-css-LC43" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-third-pass-css-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-third-pass-css-LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-third-pass-css-LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">43.125<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-third-pass-css-LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-third-pass-css-LC48" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 1/3 width with 20px gutter */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-third-pass-css-LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-third-pass-css-LC50" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">100<span class="pl-k">%</span></span> / <span class="pl-c1">3</span> - <span class="pl-c1">.875<span class="pl-k">rem</span></span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-third-pass-css-LC51" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-third-pass-css-LC52" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-third-pass-css-LC53" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-third-pass-css-LC54" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>),</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-third-pass-css-LC55" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-third-pass-css-LC56" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-third-pass-css-LC57" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-third-pass-css-LC58" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Normal Grid margin removal */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-third-pass-css-LC59" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n+1</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-third-pass-css-LC60" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-third-pass-css-LC61" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-third-pass-css-LC62" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-third-pass-css-LC63" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Correct margins for the future events */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-third-pass-css-LC64" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n+1</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-third-pass-css-LC65" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-third-pass-css-LC66" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-third-pass-css-LC67" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-third-pass-css-LC68" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 2,</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-third-pass-css-LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first 2 go 50%  */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-third-pass-css-LC70" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span>, </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-third-pass-css-LC71" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span> + <span class="pl-e">.event--future</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-third-pass-css-LC72" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-third-pass-css-LC73" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-third-pass-css-LC74" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-third-pass-css-LC75" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-third-pass-css-LC76" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity + nth for margin removal */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-third-pass-css-LC77" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span> ~ <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-third-pass-css-LC78" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-third-pass-css-LC79" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-third-pass-css-LC80" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-third-pass-css-LC81" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/third-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-third-pass-css">third-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>In this final pass, I used a slightly more complicated calculation to set the width of each child to 1/3 of the parent minus the gutters between them (100% / 3 - 0.875rem).</p>

<p>If you’re paying close attention, you might wonder why the gutter being used in the calculation is 0.875rem rather than the full 1.25rem. Well, the reason is (as best I can surmise) rounding. In order to get the flex width to fill the parent without causing a wrap, 14px (0.875rem) seemed to be the magic number.</p>

<p>It’s worth noting that if I allowed the event to grow (using <code>flex-grow: 1</code> or its equivalent in the shorthand), the column would fill in perfectly, but the last row would always be filled completely too. You could end up with two events in the last row being 50% wide each or a single event being 100% wide, which I didn’t want. I wanted them all to be equal width with the exception of the first 2. Setting <code>flex</code> as I did allowed that to happen.</p>

<p>I went ahead and reset the standard margins for events as well (on both <code>.event:nth-child(even)</code> and <code>.event:nth-child(odd)</code>). And then I turned off the margins on the first of every group of three events using <code>.event:nth-child(3n+1)</code>.</p>

<p>With that in place, I went to work on the future events, resetting the margins there as well. Then I used a quantity query (lines 70-71) to select the first two members when the list is more than 2 and set them to be 50% of the parent width minus the gutter.</p>

<p>To handle the margins in the quantity query instance, I added all the margins back (line 64) and then removed the left margins from the new row starters (line 77).</p>

<figure id="2015-03-26-4" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="ta-da">Ta-da!</h2>

<p>And there you have it. In about 80 lines of very generously spaced and commented CSS, we’ve got a flexible grid-based Flexbox layout with visual enhancements injected via quantity queries. I’m sure I’ll continue to tinker, but I’m pretty happy with the results so far.</p>

<p>You can view <a href="/speaking-engagements/">the final page of course</a> (or <a href="https://www.youtube.com/watch?v=V20wuGM2tzU">watch a video of the interaction</a>), but I also created a <a href="http://codepen.io/aarongustafson/pen/VYRZBP">distilled demo on Codepen for you to play with</a>.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>If you aren’t familiar with Flexbox, <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS Tricks has a great cheatsheet</a>. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>Interestingly, the support matrices for <a href="http://caniuse.com/#feat=calc"><code>calc()</code></a> and <a href="http://caniuse.com/#feat=flexbox">Flexbox</a> are pretty well aligned. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
