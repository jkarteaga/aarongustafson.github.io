<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Browse by Tag: Css | Aaron Gustafson]]></title>
  <link href="https://www.aaron-gustafson.com/notebook/tags/css/atom.xml" rel="self"/>
  <link href="https://www.aaron-gustafson.com/"/>
  <updated>2016-10-21T14:32:30-04:00</updated>
  <id>https://www.aaron-gustafson.com/</id>
  <author>
    <name><![CDATA[Aaron Gustafson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Playing With Flexbox and Quantity Queries]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/playing-with-flexbox-and-quantity-queries/"/>
    <updated>2015-03-26T14:44:24-04:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/playing-with-flexbox-and-quantity-queries</id>
    <content type="html"><![CDATA[<p>Ever since reading <a href="http://twitter.com/heydonworks">Haydon Pickering</a>’s <a href="http://alistapart.com/article/quantity-queries-for-css">piece on quantity queries</a>, I’ve been musing over the possibilities for layout. I decided I to play around with them a bit on this site as it’s been a while since I’ve tweaked the design. Being that I wanted to experiment, I thought this would be a fun time to tuck into <a href="http://www.w3.org/TR/css-flexbox-1/">Flexbox</a> a bit more as well.</p>

<!-- more -->

<p>Here’s a brief overview of the project:</p>

<p><strong>The Candidate</strong>: My <a href="/speaking-engagements/">speaking engagements</a> page.<br />
<strong>The Challenge</strong>: The “Future” list will grow and shrink as I book things, so I never know how many will be there. The “Past” list will also grow, but I am less interested in getting crazy with that.<br />
<strong>The Idea</strong>: A grid layout that flexes to visually highlight 1-2 upcoming future events and allows the others to flow in at the default grid size. It should be set up to handle everything from a single future event to a dozen or more.</p>

<figure id="2015-03-26-1" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/the-idea-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""><figcaption>My sketch of the idea.</figcaption></figure>

<p>The markup pattern was pretty simple. It’s just a list of events:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-markup-html" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-html">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-markup-html-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-markup-html-LC1" class="blob-code blob-code-inner js-file-line">&lt;<span class="pl-ent">ul</span> <span class="pl-e">class</span>=<span class="pl-s"><span class="pl-pds">&quot;</span>listing listing--events<span class="pl-pds">&quot;</span></span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-markup-html-LC2" class="blob-code blob-code-inner js-file-line">  &lt;<span class="pl-ent">li</span> <span class="pl-e">class</span>=<span class="pl-s"><span class="pl-pds">&quot;</span>listing__item listing__item--1 event event--future<span class="pl-pds">&quot;</span></span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-markup-html-LC3" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">&lt;!-- content --&gt;</span></td>
      </tr>
      <tr>
        <td id="file-markup-html-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-markup-html-LC4" class="blob-code blob-code-inner js-file-line">  &lt;/<span class="pl-ent">li</span>&gt;</td>
      </tr>
      <tr>
        <td id="file-markup-html-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-markup-html-LC5" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">&lt;!-- lis continue --&gt;</span></td>
      </tr>
      <tr>
        <td id="file-markup-html-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-markup-html-LC6" class="blob-code blob-code-inner js-file-line">&lt;/<span class="pl-ent">ul</span>&gt;</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/markup.html" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-markup-html">markup.html</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>With that in place, I got to work.</p>

<h2 id="single-file">Single File</h2>

<p>To set the stage, I started with some basic Flexbox syntax<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup> by handling the container and the basic full-width small screen view:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-first-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-first-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-first-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-first-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-first-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-first-pass-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-first-pass-css-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-first-pass-css-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-first-pass-css-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-first-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px padding */</span></td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-first-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px bottom margin */</span></td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-first-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-first-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-first-pass-css-LC11" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/first-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-first-pass-css">first-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>You may be wondering where all of the experimental style rules are. I use <a href="https://github.com/postcss/autoprefixer">Autoprefixer</a> to handle the experimental property inclusion/trans-compilation so I can keep my CSS clean and standards-based.</p>

<p>This simple CSS gives you exactly what you’d expect: a vertical list of events, separated by 20px worth of space.</p>

<figure id="2015-03-26-2" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/first-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="two-by-two">Two by Two</h2>

<p>Next up, I tackled the first breakpoint at 28.75em:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-second-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-second-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-second-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-second-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-second-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-second-pass-css-LC4" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">align</span>-items</span>: stretch;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-second-pass-css-LC5" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-second-pass-css-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-second-pass-css-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-second-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-second-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-second-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px v */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-second-pass-css-LC11" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-second-pass-css-LC12" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-second-pass-css-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-second-pass-css-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">28.75<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-second-pass-css-LC15" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-second-pass-css-LC16" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 20px gap divided by 2 events per row */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-second-pass-css-LC17" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-second-pass-css-LC18" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-second-pass-css-LC19" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px &lt; */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-second-pass-css-LC20" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-second-pass-css-LC21" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-second-pass-css-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Remove left margin for row starters */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-second-pass-css-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-second-pass-css-LC24" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-second-pass-css-LC25" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-second-pass-css-LC26" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-second-pass-css-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins on &quot;future&quot; events</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-second-pass-css-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &amp; remove the correct one */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-second-pass-css-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-second-pass-css-LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-second-pass-css-LC31" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-second-pass-css-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>) {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-second-pass-css-LC33" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-second-pass-css-LC34" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-second-pass-css-LC35" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-second-pass-css-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 1,</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-second-pass-css-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first span both columns  */</span></td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-second-pass-css-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+1</span>)<span class="pl-e">:first-child</span> {</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-second-pass-css-LC39" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-second-pass-css-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-second-pass-css-LC41" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-second-pass-css-LC42" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-second-pass-css-LC43" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-second-pass-css-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-second-pass-css-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/second-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-second-pass-css">second-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>In this pass, I set up the event blocks to fill 50% of the parent container (well, 50% minus the 1.25rem gutter between them, using <a href="http://www.w3.org/TR/css3-values/#calc"><code>calc()</code></a>).<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup> In order to make the children wrap to form rows, I set <code>flex-wrap: wrap</code> on the list (<code>.listing--events</code>). Then, to make the children all equal heights across each row, I set <code>align-items: stretch</code>. The gutter space was achieved via left margins on all events save the row starters (<code>.event:nth-child(odd)</code>).</p>

<p>It’s worth noting that in the full page I have two sets of event listings: one past and one future. The “event” <code>class</code> is used in all instances. The modified “future” <code>class</code> is added to events that have not happened yet.</p>

<p>Then I used a quantity query to select the first future event when there is more than one in the list (line 38) and set it span 100% of the parent width. To keep the gutters accurate, I also swapped where the margins were applied, adding the margin back to <code>.event--future:nth-child(odd)</code> and removing it from <code>.event--future:nth-child(even)</code>.</p>

<figure id="2015-03-26-3" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/second-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="threes-a-crowd">Three’s a Crowd</h2>

<p>Finally, I could tackle the third and most complicated layout. Things seemed to get a little wide around 690px, so I set the breakpoint to 43.125em.</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20766084" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-third-pass-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-third-pass-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-third-pass-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.listing--events</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-third-pass-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">display</span></span>: flex;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-third-pass-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span>-<span class="pl-c1">wrap</span></span>: wrap;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-third-pass-css-LC4" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">align</span>-items</span>: stretch;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-third-pass-css-LC5" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-third-pass-css-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-third-pass-css-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-third-pass-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">box-sizing</span></span>: border-box;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-third-pass-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">padding</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-third-pass-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">margin</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1.25<span class="pl-k">rem</span></span> <span class="pl-c1">0</span>; <span class="pl-c">/* 20px v */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-third-pass-css-LC11" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-third-pass-css-LC12" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-third-pass-css-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-third-pass-css-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">28.75<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-third-pass-css-LC15" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-third-pass-css-LC16" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 20px gap divided by 2 events per row */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-third-pass-css-LC17" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-third-pass-css-LC18" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-third-pass-css-LC19" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>; <span class="pl-c">/* 20px &lt; */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-third-pass-css-LC20" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-third-pass-css-LC21" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-third-pass-css-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Remove left margin for row starters */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-third-pass-css-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-third-pass-css-LC24" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-third-pass-css-LC25" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-third-pass-css-LC26" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-third-pass-css-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins on &quot;future&quot; events</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-third-pass-css-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &amp; remove the correct one */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-third-pass-css-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-third-pass-css-LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-third-pass-css-LC31" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-third-pass-css-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-third-pass-css-LC33" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-third-pass-css-LC34" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-third-pass-css-LC35" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-third-pass-css-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 1,</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-third-pass-css-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first span both columns  */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-third-pass-css-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+1</span>)<span class="pl-e">:first-child</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-third-pass-css-LC39" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">100<span class="pl-k">%</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-third-pass-css-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-third-pass-css-LC41" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-third-pass-css-LC42" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-third-pass-css-LC43" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-third-pass-css-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-third-pass-css-LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-third-pass-css-LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">@media</span> <span class="pl-k">only</span> <span class="pl-c1">screen</span> <span class="pl-k">and</span> (<span class="pl-c1">min-width</span>: <span class="pl-c1">43.125<span class="pl-k">em</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-third-pass-css-LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-third-pass-css-LC48" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* 1/3 width with 20px gutter */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-third-pass-css-LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-third-pass-css-LC50" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">100<span class="pl-k">%</span></span> / <span class="pl-c1">3</span> - <span class="pl-c1">.875<span class="pl-k">rem</span></span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-third-pass-css-LC51" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-third-pass-css-LC52" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-third-pass-css-LC53" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Reset margins */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-third-pass-css-LC54" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">even</span>),</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-third-pass-css-LC55" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">odd</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-third-pass-css-LC56" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-third-pass-css-LC57" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-third-pass-css-LC58" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Normal Grid margin removal */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-third-pass-css-LC59" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n+1</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-third-pass-css-LC60" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-third-pass-css-LC61" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-third-pass-css-LC62" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-third-pass-css-LC63" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Correct margins for the future events */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-third-pass-css-LC64" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n+1</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-third-pass-css-LC65" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">1.25<span class="pl-k">rem</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-third-pass-css-LC66" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-third-pass-css-LC67" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-third-pass-css-LC68" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity Query - when more than 2,</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-third-pass-css-LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     make the first 2 go 50%  */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-third-pass-css-LC70" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span>, </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-third-pass-css-LC71" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span> + <span class="pl-e">.event--future</span> {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-third-pass-css-LC72" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">flex</span></span>: <span class="pl-c1">0</span> <span class="pl-c1">0</span> calc( <span class="pl-c1">50<span class="pl-k">%</span></span> - <span class="pl-c1">1.25<span class="pl-k">rem</span></span> / <span class="pl-c1">2</span> );</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-third-pass-css-LC73" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">font-size</span></span>: <span class="pl-c1">1.5<span class="pl-k">em</span></span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-third-pass-css-LC74" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-third-pass-css-LC75" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-third-pass-css-LC76" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Quantity + nth for margin removal */</span></td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-third-pass-css-LC77" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">.event--future</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+2</span>)<span class="pl-e">:first-child</span> ~ <span class="pl-e">.event--future</span><span class="pl-e">:nth-child</span>(<span class="pl-c1">3n</span>) {</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-third-pass-css-LC78" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1"><span class="pl-c1">margin-left</span></span>: <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-third-pass-css-LC79" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-third-pass-css-LC80" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-third-pass-css-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-third-pass-css-LC81" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3/raw/5e59e3c9bb9ce7b4db20a3f367fa40575d9467f2/third-pass.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/597284affc88b9084cf3#file-third-pass-css">third-pass.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>In this final pass, I used a slightly more complicated calculation to set the width of each child to 1/3 of the parent minus the gutters between them (100% / 3 - 0.875rem).</p>

<p>If you’re paying close attention, you might wonder why the gutter being used in the calculation is 0.875rem rather than the full 1.25rem. Well, the reason is (as best I can surmise) rounding. In order to get the flex width to fill the parent without causing a wrap, 14px (0.875rem) seemed to be the magic number.</p>

<p>It’s worth noting that if I allowed the event to grow (using <code>flex-grow: 1</code> or its equivalent in the shorthand), the column would fill in perfectly, but the last row would always be filled completely too. You could end up with two events in the last row being 50% wide each or a single event being 100% wide, which I didn’t want. I wanted them all to be equal width with the exception of the first 2. Setting <code>flex</code> as I did allowed that to happen.</p>

<p>I went ahead and reset the standard margins for events as well (on both <code>.event:nth-child(even)</code> and <code>.event:nth-child(odd)</code>). And then I turned off the margins on the first of every group of three events using <code>.event:nth-child(3n+1)</code>.</p>

<p>With that in place, I went to work on the future events, resetting the margins there as well. Then I used a quantity query (lines 70-71) to select the first two members when the list is more than 2 and set them to be 50% of the parent width minus the gutter.</p>

<p>To handle the margins in the quantity query instance, I added all the margins back (line 64) and then removed the left margins from the new row starters (line 77).</p>

<figure id="2015-03-26-4" class="media-container"><img  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=https://www.aaron-gustafson.com/i/posts/2015-03-26/third-pass-lg.jpg&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw" alt=""></figure>

<h2 id="ta-da">Ta-da!</h2>

<p>And there you have it. In about 80 lines of very generously spaced and commented CSS, we’ve got a flexible grid-based Flexbox layout with visual enhancements injected via quantity queries. I’m sure I’ll continue to tinker, but I’m pretty happy with the results so far.</p>

<p>You can view <a href="/speaking-engagements/">the final page of course</a> (or <a href="https://www.youtube.com/watch?v=V20wuGM2tzU">watch a video of the interaction</a>), but I also created a <a href="http://codepen.io/aarongustafson/pen/VYRZBP">distilled demo on Codepen for you to play with</a>.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>If you aren’t familiar with Flexbox, <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS Tricks has a great cheatsheet</a>. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>Interestingly, the support matrices for <a href="http://caniuse.com/#feat=calc"><code>calc()</code></a> and <a href="http://caniuse.com/#feat=flexbox">Flexbox</a> are pretty well aligned. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quantity Queries… Where Have You Been All My Life?]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/quantity-queries-where-have-you-been-all-my-life/"/>
    <updated>2015-03-20T11:00:03-04:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/quantity-queries-where-have-you-been-all-my-life</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.com/heydonworks">Heydon Pickering</a>’s <a href="http://alistapart.com/article/quantity-queries-for-css">Quantity Queries for CSS</a> is sheer brilliance and it’s so simple I’m surprised we hadn’t landed on the idea sooner.</p>

<!-- more -->

<p>We’ve all experienced this feeling: <em>I have no idea how many modules will be in this block, but I would love to lay them out differently depending on that number.</em> Short of writing exhaustive CSS to (hopefully, optimistically) cover all of your bases, we had not figured out a good way to do this.</p>

<p>Heydon to the rescue!</p>

<p>Here’s Heydon’s first quantity query example:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20567997" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-equal-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-equal-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-equal-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">6</span>)<span class="pl-e">:first-child</span>, </td>
      </tr>
      <tr>
        <td id="file-equal-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-equal-css-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">6</span>)<span class="pl-e">:first-child</span> ~ <span class="pl-ent">li</span> {</td>
      </tr>
      <tr>
        <td id="file-equal-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-equal-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: <span class="pl-c1">green</span>;</td>
      </tr>
      <tr>
        <td id="file-equal-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-equal-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86/raw/70742167354e0e0cbb87e86b805eb4efe1de605f/equal.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86#file-equal-css">equal.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>With these selectors, the rule set would only apply if the total count of list items was exactly 6. Here’s what he is selecting:</p>

<ol>
  <li>A list item (<code>li</code>) that is 6th sibling in a group of list item siblings when counted backwards (<code>:nth-last-child(6)</code>), but only if it is also the first of those siblings (<code>:first-child</code>); and</li>
  <li>Any list item (<code>li</code>) siblings that follow the one selected above (<code>~</code>).</li>
</ol>

<p>Brilliant! <a href="http://alistapart.com/article/quantity-queries-for-css#section4">Heydon breaks it down way more eloquently</a> (and with illustrated squid to boot). To use this in your own projects, simply swap the “6” for whatever count you are looking for it to be equal to.</p>

<p>But Heydon doesn’t stop there. He also gives us ways to test for  more than or equal to and fewer than or equal to a certain number. We’ll start with the <br />
“more than” variant (because everyone always wants more):</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20567997" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-more-than-or-equal-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-more-than-or-equal-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-more-than-or-equal-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+6</span>),</td>
      </tr>
      <tr>
        <td id="file-more-than-or-equal-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-more-than-or-equal-css-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">n+6</span>) ~ <span class="pl-ent">li</span> {</td>
      </tr>
      <tr>
        <td id="file-more-than-or-equal-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-more-than-or-equal-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* properties here */</span></td>
      </tr>
      <tr>
        <td id="file-more-than-or-equal-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-more-than-or-equal-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86/raw/70742167354e0e0cbb87e86b805eb4efe1de605f/more-than-or-equal.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86#file-more-than-or-equal-css">more-than-or-equal.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>This one is slightly more complex, using the <code>nth-*</code> formula to manage the calculation. In English, this selects:</p>

<ol>
  <li>A list item (<code>li</code>) which is the sixth, seventh, eighth, etc. sibling in a collection of list item siblings when counted backwards from the end of that collection (<code>:nth-last-child(n+6)</code>); and</li>
  <li>Any list item (<code>li</code>) siblings that follow the one(s) selected above (<code>~</code>).</li>
</ol>

<p>The magic is in the formula: <em>n+6</em>.</p>

<p>The way <code>nth-*</code> formulae work is that the “n” portion is about dividing the siblings into smaller groups based on the <em>n</em> multiplier. So “2n” means for every group of 2, “3n” means for every group of 3, and so on. In Heydon’s case, “n” simply means for every group of 1. The <em>n</em> multiplier starts as zero (for the first group) and then becomes 1, 2, 3, etc. in succession.</p>

<p>The number added or subtracted from this number (“+6” in the example) can be though of as the item in the count. Most often we see this in use as “2n+2” which stands for the second sibling in every group of two. It’s usually common to see this number be smaller than the grouping number (“3n+2”, “5n+3”, etc.). In Heydon’s example, however there is no grouping, so that logic doesn’t really apply. Instead you can think of it as simply adding the multiplier to 6: 0+6 (6), 1+6 (7), 2+6 (8), etc.</p>

<p>Now count from the end and then select that and everything that follows and you get a “more than or equal to” count based on the number (6 in his case, but again you can swap it out). Brilliant!</p>

<p>The final example he gives is for fewer than or equal to a particular number:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist20567997" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-fewer-than-or-equal-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-fewer-than-or-equal-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-fewer-than-or-equal-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">-n+6</span>)<span class="pl-e">:first-child</span>,</td>
      </tr>
      <tr>
        <td id="file-fewer-than-or-equal-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-fewer-than-or-equal-css-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">li</span><span class="pl-e">:nth-last-child</span>(<span class="pl-c1">-n+6</span>)<span class="pl-e">:first-child</span> ~ <span class="pl-ent">li</span> {</td>
      </tr>
      <tr>
        <td id="file-fewer-than-or-equal-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-fewer-than-or-equal-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* properties here */</span></td>
      </tr>
      <tr>
        <td id="file-fewer-than-or-equal-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-fewer-than-or-equal-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86/raw/70742167354e0e0cbb87e86b805eb4efe1de605f/fewer-than-or-equal.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/eddda1f32ed102cedd86#file-fewer-than-or-equal-css">fewer-than-or-equal.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>This one is largely the same as the “more than” example, but the multiplier is reversed (with the minus sign) which means the count runs backward: 0+6 (6), -1+5 (5), -2+6 (4), and so on.</p>

<p>I am just overjoyed with how brilliant this is. I can think of so many places to use it (and will likely be doing so quite soon).</p>

<h2 id="bonus-now-with-sass">Bonus: Now with SASS</h2>

<p><a href="https://twitter.com/danielguillan">Daniel Guillan</a> has <a href="https://github.com/danielguillan/quantity-queries">ported this functionality (and more) to SASS</a> using a handful of really straightforward mixins. Here’s a demo:</p>

<figure id="fig-2015-03-20-01" class="media-container"><p class="codepen" data-user="danielguillan" data-href="GgBOxm" data-height="331" data-type="result" data-preview="true">See the Pen <a href="http://codepen.io/danielguillan/pen/GgBOxm">Quanity Queries Sass mixins demo</a> by Daniel Guillan (<a href="//codepen.io/danielguillan">danielguillan</a>) on <a href="//codepen.io">CodePen</a>.</p><script async src="//codepen.io/assets/embed/ei.js"></script></figure>

<p>Happy counting!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Variables Are a Bad Idea]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/css-variables-are-a-bad-idea/"/>
    <updated>2014-11-04T14:58:01-05:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/css-variables-are-a-bad-idea</id>
    <content type="html"><![CDATA[<p>I’ll level with you: I used to think I wanted variables in CSS.</p>

<p>As a programmer, I love the idea of being able to abstract reusable bits like colors, border widths, font sizes, and the like to obviously named variables. It’s a far more <a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a> approach and makes maintenance far easier.</p>

<!-- more -->

<p>Before I made the leap to using a CSS preprocessor, I was convinced we needed CSS variables, but I always wondered how we might make it possible without breaking one of the fundamental <a href="http://www.w3.org/TR/CSS21/intro.html#design-principles">design principles of CSS</a>: Forward and backward compatibility. Take a look at this example (which is based on <a href="http://www.w3.org/TR/css-variables/">the working draft spec</a>) and I think you’ll spot the problem:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist15673521" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-css-vairables-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-css-vairables-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-css-vairables-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">:root</span> {</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-css-vairables-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">--foreground-<span class="pl-c1">color</span></span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-css-vairables-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">--<span class="pl-c1">background-color</span></span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-css-vairables-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-css-vairables-css-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-css-vairables-css-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">body</span> {</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-css-vairables-css-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: var(--background-color);</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-css-vairables-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: var(--foreground-color);</td>
      </tr>
      <tr>
        <td id="file-css-vairables-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-css-vairables-css-LC9" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1/raw/743c886295c6dd38d87625b34f0a6308689c77cc/css-vairables.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1#file-css-vairables-css">css-vairables.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>For a browser that understands CSS variables, the interpreted stylesheet would look like this:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist15673521" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-desired-result-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-desired-result-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-desired-result-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">body</span> {</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-desired-result-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-desired-result-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-desired-result-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1/raw/743c886295c6dd38d87625b34f0a6308689c77cc/desired-result.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1#file-desired-result-css">desired-result.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>But any browser that doesn’t understand the variables would never get the color values because browsers follow <a href="http://www.w3.org/TR/CSS21/syndata.html#parsing-errors">the rules of fault tolerance in CSS</a> and ignore anything they don’t understand. The introduction of variables to CSS would effectively build a wall between older browsers and new ones. (For the record, as of this writing, <a href="http://caniuse.com/#feat=css-variables">only Firefox has implemented CSS variables</a>).</p>

<p>In order to serve the broadest spectrum of devices, we’d have to provide a fallback like this:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist15673521" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-css-variables-fallback-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-css-variables-fallback-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-css-variables-fallback-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-e">:root</span> {</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-css-variables-fallback-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">--foreground-<span class="pl-c1">color</span></span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-css-variables-fallback-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">--<span class="pl-c1">background-color</span></span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-css-variables-fallback-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-css-variables-fallback-css-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-css-variables-fallback-css-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">body</span> {</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-css-variables-fallback-css-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-css-variables-fallback-css-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: var(--background-color);</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-css-variables-fallback-css-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-css-variables-fallback-css-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: var(--foreground-color);</td>
      </tr>
      <tr>
        <td id="file-css-variables-fallback-css-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-css-variables-fallback-css-LC11" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1/raw/743c886295c6dd38d87625b34f0a6308689c77cc/css-variables-fallback.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1#file-css-variables-fallback-css">css-variables-fallback.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>But that kinda defeats the whole purpose, right?</p>

<p>Preprocessors already give us this access to variables today (along with nesting, mixins, and programmatic structures like conditionals, loops, etc.). Here’s a SASS example:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist15673521" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-sass-variables-scss" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-scss">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-sass-variables-scss-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-sass-variables-scss-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$foreground-color</span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-sass-variables-scss-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$background-color</span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-sass-variables-scss-LC3" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-sass-variables-scss-LC4" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-sass-variables-scss-LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">body</span> {</td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-sass-variables-scss-LC6" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: <span class="pl-smi">$background-color</span>;</td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-sass-variables-scss-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: <span class="pl-smi">$foreground-color</span>;</td>
      </tr>
      <tr>
        <td id="file-sass-variables-scss-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-sass-variables-scss-LC8" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1/raw/743c886295c6dd38d87625b34f0a6308689c77cc/sass-variables.scss" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1#file-sass-variables-scss">sass-variables.scss</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>The big difference here is that this document is a source file, it is not what is sent to the browser. This file is compiled by the preprocessor into actual CSS, which is what we send to the browser and is exactly what we wanted in the first place:</p>

<p><div><link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-51ae8299bd14b6c42fb20b0ce07f643175347abaca051f9c55e114bfc98b10b1.css">
<div id="gist15673521" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-desired-result-css" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-css">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-desired-result-css-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-desired-result-css-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-ent">body</span> {</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-desired-result-css-LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">background</span></span>: <span class="pl-c1">#fff</span>;</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-desired-result-css-LC3" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1"><span class="pl-c1">color</span></span>: <span class="pl-c1">#333</span>;</td>
      </tr>
      <tr>
        <td id="file-desired-result-css-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-desired-result-css-LC4" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>

  </div>

  </div>
  
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1/raw/743c886295c6dd38d87625b34f0a6308689c77cc/desired-result.css" style="float:right">view raw</a>
        <a href="https://gist.github.com/aarongustafson/c3ddcb792eb69e0703e1#file-desired-result-css">desired-result.css</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></p>

<p>And it works on every browser that supports CSS, all the way back to <a href="https://en.wikipedia.org/wiki/Cascading_Style_Sheets#Difficulty_with_adoption">IE 3</a>.</p>

<p>With a preprocessor like SASS, Less, or Stylus, I get all of the maintainability benefits without sacrificing browser support. It’s a no-brainer. But even if that were not true, there’s another issue to consider: If I push CSS variables to browsers, they have to parse the CSS and substitute the variables before they can apply the styles.</p>

<p>Now I’m sure browser makers can find ways to optimize this process, but it’s bound to affect the rendering time. And not in a positive way. I don’t even want to think about how bad it would be on a mobile chipset, especially on a low-end device.</p>

<p>Honestly, I love using variables… in the source files I use with a preprocessor. Given the potential loss of browser support, the pointless fallbacks I’d have to use if I wanted to continue supporting older browsers, the existence of numerous preprocessor options that solve the abstraction problem in a backward- and forward-compatible way, and the fact that CSS variables would make browsers have to work even harder to achieve the desired result, I’m not convinced we need them.</p>

<p>CSS variables are a bad idea.</p>
]]></content>
  </entry>
  
</feed>
