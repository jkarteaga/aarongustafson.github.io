<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Browse by Tag: Writing | Aaron Gustafson]]></title>
  <link href="https://www.aaron-gustafson.com/notebook/tags/writing/atom.xml" rel="self"/>
  <link href="https://www.aaron-gustafson.com/"/>
  <updated>2016-12-07T06:48:28-08:00</updated>
  <id>https://www.aaron-gustafson.com/</id>
  <author>
    <name><![CDATA[Aaron Gustafson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac-like Special Characters in Windows]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/mac-like-special-characters-in-windows/"/>
    <updated>2016-11-02T08:59:42-07:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/mac-like-special-characters-in-windows</id>
    <content type="html"><![CDATA[<p>I am a bit of a geek for proper punctuation: Em dashes… en dashes… curly quotes… ellipses… I love them all! Prior to 2007, I was a long-time Windows user and was a master of the <kbd>Alt + <var>numeric code</var></kbd> system of entering special characters on that operating system.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup> For nearly a decade, however, I’ve been writing and developing on a Mac and I absolutely love how much easier it is to use special characters.  When I started setting up my new Surface Book, I began searching for a way to bring Mac-like special character entry to Windows 10.</p>

<!-- more -->

<p><em>Disclaimer: I take absolutely no credit for the code you see below. I will give full credit to the sources as I discuss each. I just wanted to bring it all into one place so it’ll save you a few hours of research to get everything working.</em></p>

<h2 id="step-1-set-up-autohotkey">Step 1: Set up AutoHotKey</h2>

<p><a href="https://thejournal.com/articles/2016/01/26/how-to-create-keyboard-shortcuts-for-special-characters-in-windows-10.aspx">David Nagel’s solid article on mapping keystrokes in Windows</a>, I introduced me to <a href="https://autohotkey.com/">AutoHotKey</a>. It’s an incredibly powerful program that’s like the lovechild of <a href="https://textexpander.com/">TextExpander</a> and <a href="https://qsapp.com/">Quicksilver</a>.</p>

<p>In his article, David walks through the process of getting set up with AutoHotKey:</p>

<ol>
  <li><a href="https://autohotkey.com/download/">Download</a> &amp; install it.</li>
  <li>Create a new <code>.ahk</code> file (<samp>New &gt; AutoHotKey Script</samp> in Windows Explorer) and name it whatever you like.<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup></li>
  <li>Right-click the script, and choose <samp>Edit Script</samp> from the context menu.</li>
  <li>Enter some keyboard shortcuts (more on that in a moment).</li>
  <li>Save the script. I chose to save it to Dropbox to make it portable.</li>
  <li>Double click it to run the script.</li>
  <li>Open up your favorite writing tool and see your handiwork in action.</li>
</ol>

<h2 id="step-2-create-some-shortcuts">Step 2: Create some shortcuts</h2>

<p>AutoHotKey is completely scriptable and adding shortcuts is relatively straightforward. There are a few reserved characters, but once you understand what they are it’s pretty easy to get going very quickly. Here’s Dave’s intro example:</p>

<p>{% gist f59fead5a44734d31a20106d79d41c98 sample.ahk embed %}</p>

<p>In AutoHotKey scripting, “!” stands in for <kbd>Alt</kbd> and “+” stands in for <kbd>Shift</kbd>. So, to translate:</p>

<ol>
  <li><kbd>Alt + -</kbd> will produce an en dash (–)</li>
  <li><kbd>Shift Alt + -</kbd> will produce an em dash (—)</li>
</ol>

<p>With these two examples, I was able to jump right in and map many of the most common shortcuts I use while writing. Before I got too far, however, I realized I really needed accents, umlauts, and the like. I searched some more and eventually discovered <a href="https://autohotkey.com/board/topic/27801-special-characters-osx-style">a post in the AutoHotKey forum archive by “Veil” from way back in 2008</a>.</p>

<p>Veil broke his solution into two parts, but I’ve combined them here to make it easier for your to copy into your AutoHotKey script file. This code has provided everything I’ve needed so far, so Veil—wherever you are—<strong>thank you</strong>!</p>

<p>{% gist f59fead5a44734d31a20106d79d41c98 osx-special-chars.ahk  embed %}</p>

<h2 id="step-3-run-your-script-when-windows-starts">Step 3: Run your script when Windows starts</h2>

<p>The last thing you’ll want to do is add your <code>.ahk</code> file to Windows’ startup items. Dave covered that in his piece as well:</p>

<ol>
  <li>Create a shortcut to your file (<samp>Right click &gt; Create Shortcut</samp>)</li>
  <li>Run <code>shell:startup</code> (<kbd>⊞ Win + R</kbd> opens the Run dialog or you can type ”Run“ in the Cortana Search Box)</li>
  <li>Move your shortcut to the folder that opens.</li>
</ol>

<p>Once you’ve followed those steps, you’re done. You can update your <code>.ahk</code> scripts needed and just double click it to replace the instance that’s currently running.</p>

<hr />

<p>If, like me (and <a href="https://twitter.com/search?q=%23davegoeswindows">Dave</a> and <a href="https://snook.ca/archives/other/running-into-windows">Jonathan</a> and <a href="http://danielmall.com/articles/opening-windows/">Dan</a>), you’re using Windows after a long time in Mac land <em>and</em> you’re a typography nerd, hopefully you’ll find this helpful. And if you come up with any improvements to the character mapping, please share!</p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>I actually memorized a ton of <a href="http://tools.oratory.com/altcodes.html">the codes</a>, much to my amazement. I still remember a few, but I am thankful to have reclaimed a bit of that memory space over the last few years. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>If you shun the mouse, you can create a text file in your favorite editor and name it with the <code>.ahk</code> extension, but you might run into character encoding issues. I created mine in <a href="https://code.visualstudio.com/">VS Code</a> as UTF-8, but had to open the file in Notepad and re-save it again to get it to actually work. I never figured out the exact issue, but I thought I’d give you a heads-up. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Avoiding Link Rot in Print With the Help of Perma.cc]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/avoiding-linkrot-in-print-with-the-help-of-perma-dot-cc/"/>
    <updated>2015-12-02T13:03:35-08:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/avoiding-linkrot-in-print-with-the-help-of-perma-dot-cc</id>
    <content type="html"><![CDATA[<p>I think we can all agree, <a href="https://en.wikipedia.org/wiki/Link_rot">link rot</a> is a problem. A 2014 study by Harvard Law School determined that <a href="http://journals.cambridge.org/action/displayAbstract?fromPage=online&amp;aid=9282809&amp;fileId=S1472669614000255/">roughly 50% of the URLs referenced in U.S. Supreme Court opinions no longer work</a>. That’s <em>terrifying</em>.</p>

<!-- more -->

<p>When I was mid-way through writing <a href="http://adaptivewebdesign.info/2nd-edition/">the Second Edition of <cite>Adaptive Web Design</cite></a>, I realized that it was pretty likely some of the links I was referencing might disappear over the years. Little did I know, some of them would disappear <em>while I was writing the book!</em></p>

<p><a href="https://archive.org/web/">The Internet Archive’s Wayback Machine</a> is pretty good, but it doesn’t archive everything, and I often find captured pages end up broken—especially if they rely heavily JavaScript, but often images go missing as well. I wanted to make sure that when you pick up the book a year from now or even 10 years from now, the links will still work.</p>

<p>I evaluated a few options for creating a permanent archive of each and every link in the book (there are over 200), but then it dawned on me that <a href="https://perma.cc/">Perma.cc</a> might be the perfect answer.</p>

<p>Perma.cc was created by the <a href="http://librarylab.law.harvard.edu/">Harvard Library Innovation Lab</a> in reaction to the paper I mentioned earlier. It is a distributed archive of URLs for scholarly and legal documents, supported not only by Harvard, but over 90 (<em>and counting!</em>) libraries, distributed all over the world. <a href="https://github.com/harvard-lil/perma">It’s also open source</a>. Each <a href="https://perma.cc/docs#archive-formats">URL is preserved as a live view, an archived view, and a screen capture</a> taken when the link is added. Archived URLs are kept for a minumum of 2 years, but <a href="https://perma.cc/docs#vesting-links">may be “vested” into the permanent archive by a member organization</a>.</p>

<p>I had contributed some CSS to the project a while back, so I reached out to my contacts to see if they might be interested in vesting all of the links for the book. Turns out they were big fans of <a href="http://adaptivewebdesign.info/1st-edition/">the First Edition</a> and enthusiastically offered their support.</p>

<p>Converting all of the links took time (and a lot of double- and triple-checking), but the result is that every article, blog post, and web page that I referenced in the book will remain accessible to you in perpetuity. I think that’s pretty awesome. And, as an added bonus, since Perma.cc creates unique URLs that are relatively short, those of you who read it in print won’t have to re-type the often incredibly-lengthy original URLs.</p>

<p>I can’t thank <a href="http://mattphillips.info/">Matt Phillips</a>, <a href="https://twitter.com/abziegler">Adam Ziegler</a>, <a href="http://jackcushman.org/">Jack Cushman</a>, and everyone else at the Harvard Library Innovation Lab enough for creating Perma.cc <em>and</em> for offering their service to my readers. You all are amazing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adaptive Web Design: Folded &amp; Gathered]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/adaptive-web-design-folded-and-gathered/"/>
    <updated>2015-11-12T10:16:27-08:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/adaptive-web-design-folded-and-gathered</id>
    <content type="html"><![CDATA[<p>I just got this photo from <a href="https://www.linkedin.com/pub/tracey-croom/13/a6/985">Tracey Croom</a>, my production editor on <a href="http://adaptivewebdesign.info/2nd-edition/">the Second Edition of <cite>Adaptive Web Design</cite></a> and I wanted to share it with you. Production is almost done and I should be getting my bound copies soon. I’m so excited!</p>

<figure id="fig-2015-11-12-01" class="media-container">{% adaptive_image /i/posts/2015-11-12/01.jpg %}<figcaption>A photo of the folded &amp; gathered pages of <cite>Adaptive Web Design</cite>’s Second Edition.</figcaption></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Typography]]></title>
    <link href="https://www.aaron-gustafson.com/notebook/responsive-typography/"/>
    <updated>2014-09-20T13:43:22-07:00</updated>
    <id>https://www.aaron-gustafson.com/notebook/responsive-typography</id>
    <content type="html"><![CDATA[<p>I’m incredibly excited to see that <a href="https://twitter.com/jpamental">Jason Pamental</a>’s fantastic <a href="http://www.amazon.com/gp/product/1491907096/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1491907096&amp;linkCode=as2&amp;tag=easydesign-20&amp;linkId=JC6INFXF3DHODKEM"><cite>Responsive Typography</cite></a> is finally available. I had the great pleasure of reviewing an early galley and I can honestly say that it’s a book well worth reading. Jason’s natural and friendly style makes for an easy read and it’s chock-full of actionable recommendations and tips you’ll want to start using right away.</p>

<!-- more -->

<p>In fact, I think <cite>Responsive Typography</cite> is such an invaluable book, I offered to write the Foreword and Jason (and O’Reilly) have been kind enough to let me reprint it here:</p>

<blockquote>
  <p>Back in my day, all we had was the <code>font</code> element.</p>
</blockquote>

<blockquote>
  <p>I fully realize that makes me sound like an old man, but I’m not ready to chase young whippersnappers off my lawn quite yet. But the fact remains that when I taught myself how to build web pages back in the mid-’90s, our design options were fairly limited. Heck, my first experience on the Web was on a text-based browser that provided me access to page upon glorious page of stark, blocky Courier. White text. Black background. 100% responsive.</p>
</blockquote>

<blockquote>
  <p>When visual browsers finally hit the scene, ushering in images and the <code>font</code> element, we web designers finally had the opportunity to move out of monospace. I’ll leave it to Jason to delve into the history of typography on the Web, but the advent of visual browsers opened the floodgates for use (and abuse) of type online. It was the desktop publishing revolution all over again: a direct assault on the sensibilities of anyone with even the slightest understanding of typography.</p>
</blockquote>

<blockquote>
  <p>Over the years, we’ve made a lot of mistakes with web type: Fonts embedded in images. Fonts embedded in Flash. Fonts embedded in JavaScript. Many of those were attempts to bypass the gridlock created by browser makers, type foundries, and the W3C, who couldn’t come to a consensus on how to balance a desire for more type options on the Web while ensuring typographers got paid for all of their hard work. While they bickered, we soldiered on, looking for more accessible and maintainable ways to use more typefaces.</p>
</blockquote>

<blockquote>
  <p>And while we were busy tinkering with sIFR and Cufón, eagerly awaiting the day we could abandon those hacks and have real browser support for actual font formats, an army of little black rectangles had caught a whiff of the awesome content we were serving up to desktop browsers.</p>
</blockquote>

<blockquote>
  <p>Like ants at a Sunday picnic, these little black rectangles initially appeared one or two at a time. They were easily ignored, a nuisance. Nothing to take too seriously. But before we knew what was happening, that trickle turned into a flood and those little rectangles  were hungry. Instead of taking a crumb here and there—which we tossed to them with a great sense of self-satisfaction—these ambitious ants were carrying off whole deli trays and the friggin’ <cite>New York Times</cite>.</p>
</blockquote>

<blockquote>
  <p>These little black rectangles are, of course, the surge of handheld (or at least hand-holdable) devices that have been redefining our concept of “the Web” almost daily. They exhibit widely variable screen sizes: from about the size of a matchbook, to ones that are bigger than an extra large pizza. They sport a plethora of pixel densities, new interaction methods, unpredictable network connection speeds, and low-powered processors that can’t possibly compete with traditional laptop and desktop CPUs (not to mention a handful of different operating systems and browsers). All of these factors affect how—and even whether—your typographic choices will make it to your customers, and it’s a lot to take in.</p>
</blockquote>

<blockquote>
  <p>Thankfully, Jason has your back. The book you’re now reading is invaluable: it’s chock-full of useful approaches, practical code samples, and advice for dealing with typography in the age of responsive web design.</p>
</blockquote>

<blockquote>
  <p>By the time you finish this brief book, you’ll be ready to handle pretty much any device someone may throw at you. But hopefully they won’t. Devices are hard. And expensive.</p>
</blockquote>

<blockquote>
  <p>— Aaron Gustafson<br />
   Author, <cite>Adaptive Web Design</cite></p>
</blockquote>

<p>By the way, if you’re on a typography kick I’ll also recommend an second new book by another Jason I respect greatly: <a href="http://jasonsantamaria.com">Jason Santa Maria</a>’s <a href="http://www.abookapart.com/products/on-web-typography"><cite>On Web Typography</cite></a>. The two books books compliment each other perfectly, with very little overlap. They’d make an awesome bundle.</p>
]]></content>
  </entry>
  
</feed>
